version: "3.9"

services:
  app:
    build:
      dockerfile: devops/build/Dockerfile
      context: "."
    image: alpaca00/dtapi
    env_file: .env
    ports:
      - "5000:5000"
    deploy:
      resources:
        limits:
          memory: 1424M
          cpus: '1.00'
    command: sh -c "cd '/app' && uvicorn wsgi:app --host 0.0.0.0 --port 5000"
    volumes:
      - ./app:/app
  postgres:
    image: postgres:15-alpine
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    volumes:
      - postgres_data:/var/lib/postgresql/data
  bot:
    build:
      dockerfile: devops/build/Dockerfile
      context: "."
    image: alpaca00/dtbot
    env_file: .env
    ports:
      - "8081:8081"
    deploy:
      resources:
        limits:
          memory: 1424M
          cpus: '1.00'
    depends_on:
      - app
      - postgres
    command: sh -c "sleep 10 && cd '/app' && python dt/telegram/main.py"
    volumes:
      - ./app:/app

volumes:
  postgres_data:
